[user]
	name = Miroslaw Baran
[core]
	excludesfile = ~/.gitignore
[cola]
	fontdiff = Fira Mono,11,-1,5,50,0,0,0,0,0
[color]
	diff = always
	status = always
	branch = always
[merge]
	tool = kdiff3
[diff]
	tool = kdiff3
[difftool]
	prompt = false
[alias]
	branch-name = !git for-each-ref --format='%(refname:short)' $(git symbolic-ref HEAD)
	remote-branch-name = "!_() { \
	    full_ref=\"$(git rev-parse --symbolic-full-name --verify HEAD@{upstream})\"; \
	    remote=\"$(git remote-name)\"; \
	    echo \"${full_ref##refs/remotes/$remote/}\"; \
	  }; _"
	remote-name = !git config branch.$(git branch-name).remote
	branches = branch -a
	id = rev-parse
	pull = pull --ff-only
	merge = merge --no-ff
	up = merge --ff-only
	update = merge --ff-only
	in = !git incoming
	out = !git outgoing
	incoming = "!_() { \
	    remote=${1:-$(git remote-name)}; \
	    branch=${2:-$(git remote-branch-name)}; \
	    git fetch -q $remote && git --no-pager log HEAD..${remote}/${branch}; \
	  }; _"
	outgoing = "!_() { \
	    remote=${1:-$(git remote-name)}; \
	    branch=${2:-$(git remote-branch-name)}; \
	    git fetch -q $remote && git --no-pager log ${remote}/${branch}..HEAD; \
	  }; _"
	ci = commit
	co = checkout
	st = status -s -b
	gll = log --color=always --all --graph --topo-order --pretty='format: %Cgreen%h%Creset %s%Cred%d%Creset%n'
	root = !pwd -P
	sm = submodule
	pullsub = submodule foreach "git pull origin master"
	unstage = reset HEAD --
	ctags = "!: ${GIT_DIR:=.git} && ${GIT_DIR}/hooks/ctags"
	stash-rename = "!_() { rev=$(git rev-parse $1) && git stash drop $1 || exit 1 ; git diff-index --quiet HEAD; s=$?; [ $s != 0 ] && git stash save \"tmp stash from stash-rename\"; git stash apply $rev && shift && git stash save \"$@\" && [ $s != 0 ] && git stash pop stash@{1}; }; _"
	pip = "!pip install --upgrade $(git root)"

[gui]
	fontui = -family Ubuntu -size 10 -weight normal -slant roman -underline 0 -overstrike 0
	fontdiff = -family \"Ubuntu Mono\" -size 11 -weight normal -slant roman -underline 0 -overstrike 0
[init]
	templatedir = ~/.git-template
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
